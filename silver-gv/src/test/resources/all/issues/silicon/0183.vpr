// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field v: Int

predicate valid__Cell(self: Ref, rd: Perm) {
  //:: ExpectedOutput(parser.error)
  acc(self.v, rd)
}

method foo_ok(self: Ref)
  requires acc(valid__Cell(self, 1/2), 1/2)
  requires (unfolding acc(valid__Cell(self, 1/2), 1/2) in self.v) == 1
{}

method foo_fail(self: Ref, rd: Perm)
  requires acc(valid__Cell(self, rd), rd)
  requires none < rd && rd < write
  // UnexpectedOutput(not.wellformed:insufficient.permission, /Silicon/issue/183/) // revive this annotation when parser error not expected in this test file - Jenna
  // UnexpectedOutput(not.wellformed:insufficient.permission, /Carbon/issue/83/) // revive this annotation when parser error not expected in this test file - Jenna
  requires (unfolding acc(valid__Cell(self, rd), rd) in self.v) == 1
{}

method foo_fail_gist(self: Ref, rd: Perm)
  requires none < rd && rd < write
{
  // UnexpectedOutput(assert.failed:assertion.false, /Silicon/issue/183/) // revive this annotation when parser error not expected in this test file - Jenna
  // UnexpectedOutput(assert.failed:assertion.false, /Carbon/issue/83/) // revive this annotation when parser error not expected in this test file - Jenna
  assert none < rd * rd
}

method bar(self: Ref, rd: Perm)
  requires acc(valid__Cell(self, rd), rd)
  requires none < rd && rd < write
{
  unfold acc(valid__Cell(self, rd), rd)
  // UnexpectedOutput(assert.failed:insufficient.permission, /Silicon/issue/183/) // revive this annotation when parser error not expected in this test file - Jenna
  // UnexpectedOutput(assert.failed:insufficient.permission, /Carbon/issue/83/) // revive this annotation when parser error not expected in this test file - Jenna
  assert self.v >= self.v
}

method bar_gist(self: Ref, rd: Perm)
  requires none < rd && rd < write
{
  // UnexpectedOutput(assert.failed:assertion.false, /Silicon/issue/183/) // revive this annotation when parser error not expected in this test file - Jenna
  // UnexpectedOutput(assert.failed:assertion.false, /Carbon/issue/83/) // revive this annotation when parser error not expected in this test file - Jenna
  assert none < rd * rd
}

